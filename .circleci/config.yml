version: 2.1  # CircleCI configuration version

# Define reusable commands
commands:
  install_dependencies:
    description: "Install Python dependencies"
    steps:
      - run:
          name: Install Python Dependencies
          command: |
            python -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt

  run_tests:
    description: "Run tests with pytest"
    steps:
      - run:
          name: Run Tests
          command: |
            source venv/bin/activate
            pytest --maxfail=1 --disable-warnings -q  # Run tests with specific flags

# Define jobs (collection of steps)
jobs:
  build:
    docker:
      - image: circleci/python:3.8  # Use Python Docker image
    steps:
      - checkout  # Step to check out the code from the Git repo
      - install_dependencies  # Custom command to install dependencies
      - run_tests  # Custom command to run tests

  # Optional: Add a deployment job (for example, deploying to a server)
  deploy:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - install_dependencies
      - run:
          name: Deploy Application
          command: |
            echo "Deploying the app to production server..."
            # Insert your deploy commands here (e.g., SSH, API calls)
      - run:
          name: Notify success
          command: |
            echo "Deployment Successful!"

# Define workflows (determine job execution order)
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build  # Ensure the deploy job runs after the build job

# This configuration file will automatically run on every push or PR to the 'main' branch.
# Jobs will:
# 1. Run the 'build' job (checkout, install dependencies, run tests)
# 2. Deploy the app if the build is successful

